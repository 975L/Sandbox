#Objet : Fichier .htaccess racine de sandbox.975l.com
#Date de cr√©ation : 02/04/2018
#Copyright - Auteur : Laurent MARQUET

#Suppress spelling check as it gives access to folders
    <IfModule mod_speling.c>
        CheckSpelling Off
        CheckCaseOnly Off
    </IfModule>

#Default Email for site
    ServerSignature EMail
    SetEnv SERVER_ADMIN sandbox@975l.com

#Suppress signature from serve
    ServerSignature Off

#Caracters encoding
    AddDefaultCharset utf-8
    AddCharset utf-8 .css .js .json .rss .xml

#Forbid acces to folders
    <IfModule mod_autoindex.c>
        Options -Indexes
    </IfModule>

# Use the front controller as index file. It serves as a fallback solution when
# every other rewrite/redirect fails (e.g. in an aliased environment without
# mod_rewrite). Additionally, this reduces the matching process for the
# start page (path "/") because otherwise Apache will apply the rewriting rules
# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).
DirectoryIndex index.php

# By default, Apache does not evaluate symbolic links if you did not enable this
# feature in your server configuration. Uncomment the following line if you
# install assets as symlinks or if you experience problems related to symlinks
# when compiling LESS/Sass/CoffeScript assets.
# Options FollowSymlinks

# Disabling MultiViews prevents unwanted negotiation, e.g. "/index" should not resolve
# to the front controller "/index.php" but be rewritten to "/index.php/index".
<IfModule mod_negotiation.c>
    Options -MultiViews
</IfModule>

<IfModule mod_rewrite.c>
    RewriteEngine On

#Force non-www:
        RewriteCond %{HTTP_HOST} ^www\.975l\.com [NC]
        RewriteRule ^(.*)$ https://sandbox.975l.com/$1 [R=301,NC,L]

#Force https use
        RewriteCond %{HTTPS} off
#        RewriteCond %{HTTP:X-Forwarded-Proto} !https
        RewriteCond %{HTTP_HOST} !^localhost
        RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

#De-activate protocols access to HEAD, GET, POST and DELETE
        RewriteCond %{REQUEST_METHOD} ^(TRACE|OPTIONS|CONNECT) [NC]
        RewriteRule .* - [F]

    # Determine the RewriteBase automatically and set it as environment variable.
    # If you are using Apache aliases to do mass virtual hosting or installed the
    # project in a subdirectory, the base path will be prepended to allow proper
    # resolution of the index.php file and to redirect to the correct URI. It will
    # work in environments without path prefix as well, providing a safe, one-size
    # fits all solution. But as you do not need it in this case, you can comment
    # the following 2 lines to eliminate the overhead.
    RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
    RewriteRule ^(.*) - [E=BASE:%1]

    # Sets the HTTP_AUTHORIZATION header removed by Apache
    RewriteCond %{HTTP:Authorization} .
    RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect to URI without front controller to prevent duplicate content
    # (with and without `/index.php`). Only do this redirect on the initial
    # rewrite by Apache and not on subsequent cycles. Otherwise we would get an
    # endless redirect loop (request -> rewrite to front controller ->
    # redirect -> request -> ...).
    # So in case you get a "too many redirects" error or you always get redirected
    # to the start page because your Apache does not expose the REDIRECT_STATUS
    # environment variable, you have 2 choices:
    # - disable this feature by commenting the following 2 lines or
    # - use Apache >= 2.3.9 and replace all L flags by END flags and remove the
    #   following RewriteCond (best solution)
    RewriteCond %{ENV:REDIRECT_STATUS} ^$
    RewriteRule ^index\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]

    # If the requested filename exists, simply serve it.
    # We only want to let Apache serve files and not directories.
    RewriteCond %{REQUEST_FILENAME} -f
    RewriteRule ^ - [L]

    # Rewrite all other queries to the front controller.
    RewriteRule ^ %{ENV:BASE}/index.php [L]
</IfModule>

<IfModule !mod_rewrite.c>
    <IfModule mod_alias.c>
        # When mod_rewrite is not available, we instruct a temporary redirect of
        # the start page to the front controller explicitly so that the website
        # and the generated links can still be used.
        RedirectMatch 307 ^/$ /index.php/
        # RedirectTemp cannot be used instead
    </IfModule>
</IfModule>

#Suppress cookie for specific files
    <IfModule mod_headers.c>
        <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$">
            RequestHeader unset Cookie
            Header unset Set-Cookie
            Header set Cache-Control "max-age=86400"
        </FilesMatch>

#Prevent mobile network providers from modifying your site - html5-boilerplate
#The following header prevents modification of your code over 3G on some European providers, this is the official 'bypass' suggested by O2 in the UK
        Header set Cache-Control "no-transform"

#Better website experience for IE users - html5-boilerplate
#Force the latest IE version, in various cases when it may fall back to IE7 mode, Use ChromeFrame if it's installed for a better experience for the poor IE folk
        Header set X-UA-Compatible "IE=Edge,chrome=1"
        <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$">
            Header unset X-UA-Compatible
        </FilesMatch>

#CORS-enabled images - html5-boilerplate
#Send CORS headers if browsers request them; enabled by default for images.
        <IfModule mod_setenvif.c>
            <FilesMatch "\.(gif|png|jpe?g|svg|svgz|ico|webp)$">
                SetEnvIf Origin ":" IS_CORS
                Header set Access-Control-Allow-Origin "*" env=IS_CORS
            </FilesMatch>
        </IfModule>

#Webfont access - html5-boilerplate
#Allow access from all domains for webfonts, alternatively you could only whitelist your subdomains like "subdomain.example.com"
        <FilesMatch "\.(ttf|ttc|otf|eot|woff|font|css)$">
            Header set Access-Control-Allow-Origin "*"
        </FilesMatch>

#ETag removal - html5-boilerplate
#FileETag None is not enough for every server
        Header unset ETag
    </IfModule>

#Since we're sending far-future expires, we don't need ETags for static content - html5-boilerplate
    FileETag None

#Gzip compression - html5-boilerplate
    <IfModule mod_deflate.c>
        #Force deflate for mangled headers
        <IfModule mod_setenvif.c>
            <IfModule mod_headers.c>
                SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
                RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
            </IfModule>
        </IfModule>
#Compress all output labeled with one of the following MIME-types
        <IfModule mod_filter.c>
            AddOutputFilterByType DEFLATE application/atom+xml \
            application/javascript \
            application/json \
            application/rss+xml \
            application/vnd.ms-fontobject \
            application/x-font-ttf \
            application/xhtml+xml \
            application/xml \
            font/opentype \
            image/svg+xml \
            image/x-icon \
            text/css \
            text/javascript \
            text/html \
            text/plain \
            text/x-component \
            text/xml
        </IfModule>
    </IfModule>

#Expires headers for better cache control - html5-boilerplate
#These are pretty far-future expires headers, they assume you control versioning with filename-based cache busting, additionally, consider that outdated proxies may miscache
    <IfModule mod_expires.c>
        ExpiresActive on
        ExpiresDefault "access plus 1 week"

        #Documents
        ExpiresByType text/html "access plus 0 seconds"
        ExpiresByType text/xml "access plus 0 seconds"
        ExpiresByType application/xml "access plus 0 seconds"
        ExpiresByType application/json "access plus 0 seconds"

        #Feed
        ExpiresByType application/rss+xml "access plus 1 hour"
        ExpiresByType application/atom+xml "access plus 1 hour"

        #Media: images, video, audio
        ExpiresByType image/x-icon "access plus 1 week"
        ExpiresByType image/gif "access plus 1 week"
        ExpiresByType image/png "access plus 1 day"
        ExpiresByType image/jpeg "access plus 1 day"
        ExpiresByType video/ogg "access plus 1 week"
        ExpiresByType audio/ogg "access plus 1 week"
        ExpiresByType video/mp4 "access plus 1 week"
        ExpiresByType video/webm "access plus 1 week"

        #Webfonts
        ExpiresByType application/x-font-ttf "access plus 1 month"
        ExpiresByType font/opentype "access plus 1 month"
        ExpiresByType application/x-font-woff "access plus 1 month"
        ExpiresByType image/svg+xml "access plus 1 month"
        ExpiresByType application/vnd.ms-fontobject "access plus 1 month"

        #CSS and JavaScript
        ExpiresByType text/css "access plus 1 day"
        ExpiresByType application/javascript "access plus 1 day"
    </IfModule>

#Stop screen flicker in IE on CSS rollovers - html5-boilerplate
#The following directives stop screen flicker in IE on CSS rollovers - in combination with the "ExpiresByType" rules for images (see above).
    BrowserMatch "MSIE" brokenvary=1
    BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
    BrowserMatch "Opera" !brokenvary
    SetEnvIf brokenvary 1 force-no-vary

<IfModule !mod_rewrite.c>
    <IfModule mod_alias.c>
        # When mod_rewrite is not available, we instruct a temporary redirect of
        # the start page to the front controller explicitly so that the website
        # and the generated links can still be used.
        RedirectMatch 302 ^/$ /index.php/
        # RedirectTemp cannot be used instead
    </IfModule>
</IfModule>
